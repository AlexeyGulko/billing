version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: alexeygulko/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: "${APP_NAME}"
      SERVICE_TAGS: dev
#    command: ./wait-for-postgres.sh
    depends_on:
      - db
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    working_dir: /var/www
    networks:
      - app

  #Nginx Service
  webserver:
    image: nginx:1.19.2-alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "444:443"
    depends_on:
      - app
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app

  #MySQL Service
  db:
    image: mysql:8.0.21
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    #    ports:
    #      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    volumes:
#      - dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app
#  composer service
  composer_installation:
    container_name: composer
    image: composer
    volumes:
      - ./:/app
    depends_on:
      - app
    command: composer install --prefer-dist --optimize-autoloader && composer clear-cache

#Docker Networks
networks:
  app:
    driver: bridge
#Volumes
#volumes:
#  dbdata:
#    driver: local
